/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>

#include <Wire.h>
#include <LiquidCrystalIO.h>
#include <IoAbstractionWire.h>
#include <RuntimeMenuItem.h>
#include <EditableLargeNumberMenuItem.h>
#include "tcMenuLiquidCrystal.h"

// all define statements needed
#define LCD_WIDTH 20
#define LCD_HEIGHT 4
#define I2C_ADDRESS 0x27
#define PIN_LAYOUT RS_RW_EN
#define WIRE_VARIABLE Wire
#define PULLUP_LOGIC true
#define INTERRUPT_SWITCHES false
#define SWITCH_IODEVICE 
#define ENCODER_PIN_A 2
#define ENCODER_PIN_B 3
#define ENCODER_PIN_OK 4

// all variables that need exporting
extern LiquidCrystal lcd;
extern LiquidCrystalRenderer renderer;

// all menu item forward references.
extern ActionMenuItem menuResetTotalCycles;
extern ActionMenuItem menuManualActuationOn;
extern ActionMenuItem menuManualActuationOff;
extern ActionMenuItem menuManualActuationRetract;
extern ActionMenuItem menuManualActuationExtend;
extern BackMenuItem menuBackManualActuation;
extern SubMenuItem menuManualActuation;
extern ActionMenuItem menuTestSettingsSaveSettings;
extern TimeFormattedMenuItem menuTestSettingsMaxTime;
extern EditableLargeNumberMenuItem menuTestSettingsMaxCycles;
extern AnalogMenuItem menuTestSettingsCyclesPerSecond;
extern BooleanMenuItem menuTestSettingsPull;
extern BooleanMenuItem menuTestSettingsPush;
extern BackMenuItem menuBackTestSettings;
extern SubMenuItem menuTestSettings;
extern ActionMenuItem menuResetTest;
extern ActionMenuItem menuStopTest;
extern ActionMenuItem menuStartTest;
extern TimeFormattedMenuItem menuTimeRem;
extern TextMenuItem menuTotalCycles;
extern const ConnectorLocalInfo applicationInfo;

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION allOff(int id);
void CALLBACK_FUNCTION cycleFrequency(int id);
void CALLBACK_FUNCTION extend(int id);
void CALLBACK_FUNCTION maxCycles(int id);
void CALLBACK_FUNCTION maxRunTime(int id);
void CALLBACK_FUNCTION onHold(int id);
void CALLBACK_FUNCTION pullControl(int id);
void CALLBACK_FUNCTION pushControl(int id);
void CALLBACK_FUNCTION resetTest(int id);
void CALLBACK_FUNCTION retract(int id);
void CALLBACK_FUNCTION saveTestSettings(int id);
void CALLBACK_FUNCTION startTest(int id);
void CALLBACK_FUNCTION stopTest(int id);

void setupMenu();

#endif // MENU_GENERATED_CODE_H
